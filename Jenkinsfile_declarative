
pipeline {
    agent any

    triggers {
        pollSCM('*/5 * * * *')
    }
    stages {
        stage('Compile') {
            steps {
                mvnw('clean', 'compile')
            }
        }
        stage('Unit Tests') {
            steps {
                mvnw('test')
            }
            when {
                not {
                    branch  'master'
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Assemble') {
            steps {
                mvnw('install')
               // stash includes: '**/build/libs/*.war', name: 'app'
            }
        }
        stage('Promotion') {
            steps {
                timeout(time: 1, unit:'DAYS') {
                    //input 'Deploy to Production?'
                    echo 'Deploy to Production'
                }
            }
        }

    }
    post {
        failure {
            mail to: 'sobngwi@gmail.com', subject: 'Build failed', body: 'Please fix!'
        }
        sucess {
            archiveArtifacts artifacts: '**/target/*.jar',
                             fingerprint: true
            junit '**/target/surefire-reports/*.xml'
        }
    }
}

def mvnw(String... args) {
    sh "./mvnw ${args.join(' ')} -X"
}